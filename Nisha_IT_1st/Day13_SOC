long long maximumSumSubarray(int K, vector<int>& Arr) {
    long long max_sum = LLONG_MIN;
    long long current_sum = 0;

    // Calculate the sum of the first window
    for (int i = 0; i < K; ++i) {
        current_sum += Arr[i];
    }

    max_sum = max(max_sum, current_sum);

    // Slide the window and update max_sum
    for (int i = K; i < Arr.size(); ++i) {
        current_sum += Arr[i] - Arr[i - K];
        max_sum = max(max_sum, current_sum);
    }

    return max_sum;
