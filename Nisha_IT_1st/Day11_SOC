char* removeKdigits(char* num, int k) {
    int len = strlen(num);
    int top = 0;
    char stack[len];

    for (int i = 0; i < len; i++) {
        char digit = num[i];
        while (k > 0 && top > 0 && stack[top - 1] > digit) {
            top--;
            k--;
        }
        stack[top++] = digit;
    }

    // Remove remaining k digits from the end
    while (k > 0 && top > 0) {
        top--;
        k--;
    }

    // Find the index of the first non-zero digit
    int start = 0;
    while (start < top && stack[start] == '0') {
        start++;
    }

    // If the result is an empty string, return "0"
    if (start == top) {
        return "0";
    }

    // Create a new string with the result
    char* result = (char*)malloc(sizeof(char) * (top - start + 1));
    for (int i = start; i < top; i++) {
        result[i - start] = stack[i];
    }
    result[top - start] = '\0';

    return result;
}
