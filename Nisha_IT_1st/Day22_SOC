class Item:
    def __init__(self,val,w):
        self.value = val
        self.weight = w
        
class Solution:    
    #Function to get the maximum total value in the knapsack.
    def fractionalknapsack(self, w,arr,n):
        arr.sort(key=lambda x: x.value / x.weight, reverse=True)
        
        total_value = 0.0
        
        for item in arr:
            if w >= item.weight:
                # If the knapsack can accommodate the entire item, add its value to the total value.
                total_value += item.value
                w -= item.weight
            else:
                # If the knapsack cannot accommodate the entire item, add a fraction of it based on available capacity.
                fraction = w / item.weight
                total_value += fraction * item.value
                break
        
        return total_value
        # code here
